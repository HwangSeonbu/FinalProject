<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="security" %>    
<%@ taglib uri="http://java.sun.com/jsp/jstl/core"  prefix="c"%>
<script	src="https://cdnjs.cloudflare.com/ajax/libs/sockjs-client/1.5.0/sockjs.min.js"></script>
<script	src="https://cdnjs.cloudflare.com/ajax/libs/stomp.js/2.3.3/stomp.min.js"></script>
	<script src="${pageContext.request.contextPath }/resources/js/jquery-3.6.0.min.js"></script>
	
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
	 <link href="${pageContext.request.contextPath }/resources/js/bootstrap-5.1.3-dist/css/bootstrap.css" rel="stylesheet">
	 
	<security:csrfMetaTags/>
	<style>
	span{
		margin-left: 4px;
	}
	.user-list{
		width: 300px;
		height: 500px;
		overflow: auto;
	}
	
	</style>
	<div class="d-flex flex-nowrap" style="height: -webkit-fill-available;">
<div class="d-flex flex-column flex-shrink-0 bg-light" style="width: 4.5rem;">
    <ul class="nav nav-pills nav-flush flex-column mb-auto text-center">
      <li id="friendsHome" class="nav-item">
        <a href="#" class="d-block p-3 link-dark text-decoration-none">
     <i class="bi bi-person-circle" style="font-size: 2.25rem !important;"></i>
        </a>
      </li>
      <li class="nav-item">
        <a href="/" class="d-block p-3 link-dark text-decoration-none">
         <i class="bi bi-envelope" style="font-size: 2.25rem !important;"></i>
    </a>
      </li>
    </ul>
  </div>
	
<!-- 	<div class="form-check"> -->
<!--   <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault"> -->
<!--   <label class="form-check-label" for="flexCheckDefault"> -->
<!--     Default checkbox -->
<!--   </label> -->
<!-- </div> -->
<!-- <div class="form-check"> -->
<!--   <input class="form-check-input" type="checkbox" value="" id="flexCheckChecked" checked> -->
<!--   <label class="form-check-label" for="flexCheckChecked"> -->
<!--     Checked checkbox -->
<!--   </label> -->
<!-- </div> -->
	<div class="container" id="messageListBody" style="margin:0; margin-top: 10px;">
		
		
		
</div>
    </div>
    
<!-- 			<h4>메시징!!</h4> -->
<!-- 			<input type="text" id="receiver" placeholder="수신자 입력"/> -->
<!-- 			<input type="text" id="message" onchange="messageSend(event);" placeholder="메시지 입력 후 엔터"/> -->
<!-- 			<input type="button" value="종료" onclick="disconnect(event);"> -->
<!-- 			<div id="messageArea"></div> -->

	

<security:authentication property="principal.username" var="username"/>
<script type="text/javascript">
var token = $("meta[name='_csrf']").attr("content");
var header = $("meta[name='_csrf_header']").attr("content");

	let client = null;
	let headers = {};
	let messageArea = $("#messageArea");
	function writeMessage(messageBody){
		let sender = messageBody.sender;
		let messageType = messageBody.messageType;
		let message = messageBody.message;
		let data = messageBody.data?JSON.stringify(messageBody.data):"";
		messageArea.append(
			$("<p>").html(sender + ": " + message)
		);
		
	}
	
	function init(event) {
		var sockJS = new SockJS("${cPath}/stomp/echo");
		client = Stomp.over(sockJS);
		client.connect(headers, function(connectFrame) {
			client.subscribe("/user/queue/DM", function(messageFrame) {
				console.log(messageFrame);
				let messageBody = JSON.parse(messageFrame.body);
				writeMessage(messageBody);
			});
		}, function(error) {
			console.log(error);
		});
	}
	function messageSend(event) {
		if (!client || !client.connected)
			throw "stomp 연결 수립 전";
		var receiver = $("#receiver").val();
		var sendData = {"message" : event.target.value, "receiver" : receiver};
		$.ajax({
			url : "${pageContext.request.contextPath}/sendMessage",
			method : 'POST',
			data: JSON.stringify(sendData),
			contentType : 'application/json; charset=UTF-8',
			dataType : "json",
			beforeSend : function(xhr){
				if(token && header) {
		            xhr.setRequestHeader(header, token);
		        }
			},
			success : function(paging) {
				let body = {
					messageType : "DM"
					, message : event.target.value
					, receiver : $("#receiver").val()
				}
				
				body.sender = "${username}";
				client.send("/user/"+body.receiver+"/queue/DM", headers, JSON.stringify(body));
				
				event.target.value = "";
				event.target.focus();
				
			},
			error : function(jqXHR, textStatus, errorThrown) {
				console.log(jqXHR);
				console.log(textStatus);
				console.log(errorThrown);
			},
		});

		
	}
	function disconnect(event) {
		if (!client || !client.connected)
			throw "stomp 연결 수립 전";
		client.disconnect();
	}
	$(document).ready(init);
	
	$(window).on("unload", disconnect);
</script>

<script>


//받은메세지 확인 시작
var messageListBody = $("#messageListBody");

	$.ajax({
		url : "${pageContext.request.contextPath}/messageList",
		dataType : "json",
		success : function(messageList) {
			messageListBody.empty();
			
			let trTags = [];
			
			messageListBody.append($("<h4>").html("메시지함"));
			
			
			
			if(messageList && messageList.length > 0){
			$.each(messageList, function(idx, data){
// 				<div class="card border-info text-dark" style="margin-top: 10px;">
				let trTag = $("<div>").addClass("card border-info text-dark").css("margin-top","10px").append(
// 				  <div class="card-header bg-info">
							$("<div>").addClass("card-header bg-info").html(data.USER_NAME)
							,$("<div>").addClass("card-body").append($("<p>").addClass("card-text").html(data.MEMO_CONTENT))
				)
				trTags.push(trTag);	
			});
			}else{
				let trTag = $("<tr>").html(
								$("<td>").attr("colspan", "10")
										 .html("조건에 맞는 데이터가 없음.")
							);
				trTags.push(trTag);
			} // if end		
			messageListBody.append(trTags);
			
		},
		error : function(jqXHR, textStatus, errorThrown) {
			console.log(jqXHR);
			console.log(textStatus);
			console.log(errorThrown);
		},
	});
//받은메세지 확인 끝

$('#friendsHome').on('click',function(){
	
	     $.ajax({  
		      type : "GET", 
		       url : "${pageContext.request.contextPath}/messageUserList2", 
		       dataType : "html", 
		       error : function() {    
			      alert('통신실패!!');    
			    },       
			 success : function(data) {
				          messageListBody.html(data);
				        }		       
			});   
	 

	
	
	
	
	
	
	
// 	$.ajax({
// 		url : "${pageContext.request.contextPath}/messageUserList",
// 		dataType : "json",
// 		success : function(messageUserList) {
// 			messageListBody.empty();
			
// 			let trTags = [];
			
// 			messageListBody.append($("<h4>").html("친구목록"));
// 			let listDiv =  $("<div>").addClass("list-group user-list");
// 			if(messageUserList && messageUserList.length > 0){
// 			$.each(messageUserList, function(idx, data){
				
// 				let trTag = listDiv.append(
// 							$("<label>").addClass("list-group-item").append(
// 							$("<input>").addClass("form-check-input me-1").attr('type','checkbox')
// 							,$("<span>").addClass("badge " + (data.userType == '학생' ? "bg-primary" : data.userType == '교수' ? "bg-success" : data.userType == '학사관리자' ? "bg-warning" : "bg-info" ))
// 							.html((data.userType == '학생' ? "학생" : data.userType == '교수' ? "교수" : data.userType == '학사관리자' ? "학사관리자" : "소속없음" ))
// 							,$("<span>").addClass("badge bg-secondary").html("컴퓨터공학과")
// 							,$("<span>").addClass("badge bg-dark").html(data.userName)
								
// 							)
// 						)
				
// 				trTags.push(trTag);	
// 			});
// 			}else{
// 				let trTag = $("<tr>").html(
// 								$("<td>").attr("colspan", "10")
// 										 .html("조건에 맞는 데이터가 없음.")
// 							);
// 				trTags.push(trTag);
// 			} // if end		
// 			messageListBody.append(trTags);
			
// 		},
// 		error : function(jqXHR, textStatus, errorThrown) {
// 			console.log(jqXHR);
// 			console.log(textStatus);
// 			console.log(errorThrown);
// 		},
// 	});
	
	
	
});
		</script>




    <script src="${pageContext.request.contextPath }/resources/js/bootstrap-5.1.3-dist/js/bootstrap.bundle.min.js"></script>
