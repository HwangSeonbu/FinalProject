package kr.or.ddit.grade.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;

import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.grade.service.GradeService;
import kr.or.ddit.vo.GradeVO;
import kr.or.ddit.vo.MemberVO;
import kr.or.ddit.vo.security.MemberVOWrapper;
import lombok.extern.slf4j.Slf4j;

/**
 * 교수가 성적을 입력하기 위한 컨트롤러
 * @author 주창규
 * @since 2022. 4. 27.
 * @version 1.0
 * @see javax.servlet.http.HttpServlet
 * <pre>
 * [[개정이력(Modification Information)]]
 * 수정일                          수정자               수정내용
 * --------     --------    ----------------------
 * 2022. 4. 27.      주창규       최초작성
 * Copyright (c) 2022 by DDIT All right reserved
 * </pre>
 */

@Controller
@Slf4j
@RequestMapping("/studentGrade")
public class GradeSelectController {
	
	@Inject
	private GradeService Gservice;
	
	//단순히 페이지 이동
	@RequestMapping("selectGradeForm")
	public String semsdataSelect(
	){
		return "grade/gradeView";
	}
	
	//년도와 학기를 선택 후 해당 정보를 리턴
	@RequestMapping("semsdataForm")
	public String gradeUpdate(
			 Model model
	){
		List<String> semsdata = Gservice.retrieveSemsdata();
		model.addAttribute("semsdata", semsdata);
		log.info("======55555555=========semsdataTest==========={}",semsdata);
		return "jsonView";
	}
	
	@RequestMapping("selectLecture")
	public String lectureSelect(
			Model model
			, Authentication authentication
			, @RequestParam(value ="semsdata") String planSems
			
	){
		MemberVO authMember = ((MemberVOWrapper)authentication.getPrincipal()).getRealUser();
		int userNo = authMember.getUserNo();
		
		Map<String,Object> map =new HashMap<>();
		
		map.put("planSems", planSems);	//연도 학기
		map.put("userNo", userNo);	//학생번호
		log.info("==================mapTest1212==========={}",map);
		List<Map<String, Object>> professorLecture =Gservice.retrieveProfessorLecture(map);
		
		
		log.info("==========123123=====professorLecture Test{}", professorLecture);
		
		model.addAttribute("professorLecture", professorLecture);
		
		return "jsonView";
	}
	
	@RequestMapping("selectStudentGrade")
	public String gradeSelect(
			Model model
			, @RequestParam(value ="lecSems") String lecSems
			, @RequestParam(value ="lecId") String lecId
	){
		Map<String,Object> map =new HashMap<>();
		map.put("lecSems", lecSems);
		map.put("lecId", lecId);
		log.info("==================mapTest1212==========={}",map);
		List<Map<String, Object>> studentGrade = Gservice.retrieveStudentGrade(map);
		Map<String, Object> lectureRate = Gservice.retrieveLectureRate(lecId);
		
		model.addAttribute("studentGrade", studentGrade);
		model.addAttribute("lectureRate", lectureRate);
		
		return "jsonView";

	}
}
