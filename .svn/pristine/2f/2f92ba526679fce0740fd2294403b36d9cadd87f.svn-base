<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="security" %>    
<%@ taglib uri="http://java.sun.com/jsp/jstl/core"  prefix="c"%>
<script	src="https://cdnjs.cloudflare.com/ajax/libs/sockjs-client/1.5.0/sockjs.min.js"></script>
<script	src="https://cdnjs.cloudflare.com/ajax/libs/stomp.js/2.3.3/stomp.min.js"></script>
	<script src="${pageContext.request.contextPath }/resources/js/jquery-3.6.0.min.js"></script>
	
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
	 <link href="${pageContext.request.contextPath }/resources/js/bootstrap-5.1.3-dist/css/bootstrap.css" rel="stylesheet">
	 
	<security:csrfMetaTags/>
	<style>
	span{
		margin-left: 4px;
	}
	.user-list{
		width: 300px;
		height: 500px;
		overflow: auto;
	}
.modal-dialog .modal-fullsize {
  width: 100%;
  height: 90%;
  margin: 0;
  padding: 0;
}

	
	</style>
	<div class="d-flex flex-nowrap" style="height: -webkit-fill-available;">
<div class="d-flex flex-column flex-shrink-0 bg-light" style="width: 4.5rem;">
    <ul class="nav nav-pills nav-flush flex-column mb-auto text-center">
      <li id="friendsHome" class="nav-item">
        <a href="#" class="d-block p-3 link-dark text-decoration-none">
     <i class="bi bi-person-circle" style="font-size: 2.25rem !important;"></i>
        </a>
      </li>
      <li id="messageHome" class="nav-item">
        <a href="#" class="d-block p-3 link-dark text-decoration-none">
         <i class="bi bi-envelope" style="font-size: 2.25rem !important;"></i>
    </a>
      </li>
    </ul>
  </div>
	
<!-- 	<div class="form-check"> -->
<!--   <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault"> -->
<!--   <label class="form-check-label" for="flexCheckDefault"> -->
<!--     Default checkbox -->
<!--   </label> -->
<!-- </div> -->
<!-- <div class="form-check"> -->
<!--   <input class="form-check-input" type="checkbox" value="" id="flexCheckChecked" checked> -->
<!--   <label class="form-check-label" for="flexCheckChecked"> -->
<!--     Checked checkbox -->
<!--   </label> -->
<!-- </div> --><div class="container"><button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
  메시지 보내기
</button>
	<div class="container" id="messageListBody" style="margin:0; margin-top: 10px;">
		
		
		
</div>
    </div>
    </div>
    


<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-fullsize modal-xl">
    <div class="modal-content modal-fullsize modal-xl">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">메시지 보내기</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="sendMessageForm">
      
        	<div class="form-floating">
 				<textarea class="form-control" placeholder="Leave a comment here" id="sendMemoContent" style="height: 100%"></textarea>
  				<label for="sendMemoContent">내용</label>
			</div>
      
<!-- 			<h4>메시징!!</h4> -->
<!-- 			<input type="text" id="message" onchange="messageSend(event);" placeholder="메시지 입력 후 엔터"/> -->
<!-- 			<input type="button" value="종료" onclick="disconnect(event);"> -->
<!-- 			<div id="messageArea"></div> -->
<!-- Button trigger modal -->
        
        
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" id="messageSubmitBtn">보내기</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
      </div>
    </div>
  </div>
</div>
	

<security:authentication property="principal.username" var="username"/>
<script type="text/javascript">

$('#messageSubmitBtn').on('click',function(){
	messageSend(event);
});

var token = $("meta[name='_csrf']").attr("content");
var header = $("meta[name='_csrf_header']").attr("content");
var receiver = []; //수신자목록
	let client = null;
	let headers = {};
	let messageArea = $("#messageArea");
	function writeMessage(messageBody){
		let sender = messageBody.sender;
		let messageType = messageBody.messageType;
		let message = messageBody.message;
		let data = messageBody.data?JSON.stringify(messageBody.data):"";
		messageArea.append(
			$("<p>").html(sender + ": " + message)
		);
		
	}
	
	 function init(event) {
		var sockJS = new SockJS("${cPath}/stomp/echo");
		client = Stomp.over(sockJS);
		client.connect(headers, function(connectFrame) {
			client.subscribe("/user/queue/DM", function(messageFrame) {
				//메시지 받았을때 하는일
				console.log(messageFrame);
				let messageBody = JSON.parse(messageFrame.body);
				writeMessage(messageBody);
			});
		}, function(error) {
			console.log(error);
		});
	} 
	function messageSend(event) {
		if (!client || !client.connected)
			throw "stomp 연결 수립 전";
		var sendMemoContent = $('#sendMemoContent').val();
		var sendData = {"message" : sendMemoContent, "receiver" : receiver};
		
		//모달창닫고 내용지우기
		$('#exampleModal').modal('hide');
		$('#sendMemoContent').val('');
		
		
		$.ajax({
			url : "${pageContext.request.contextPath}/sendMessage",
			method : 'POST',
			data: JSON.stringify(sendData),
			contentType : 'application/json; charset=UTF-8',
			dataType : "json",
			beforeSend : function(xhr){
				if(token && header) {
		            xhr.setRequestHeader(header, token);
		        }
			},
			success : function(paging) {
				$.each(sendData.receiver, function(idx,receiverId){
					
				
				let body = {
					messageType : "DM"
					, message : sendData.message
					, receiver : receiverId
				}
				
				body.sender = "${username}";
				client.send("/user/"+receiverId+"/queue/DM", headers, JSON.stringify(body));
				});
				
			},
			error : function(jqXHR, textStatus, errorThrown) {
				console.log(jqXHR);
				console.log(textStatus);
				console.log(errorThrown);
			},
		});

		
	}
	function disconnect(event) {
		if (!client || !client.connected)
			throw "stomp 연결 수립 전";
		client.disconnect();
	}
	$(document).ready(init);
	
	$(window).on("unload", disconnect);
</script>

<script>


//받은메세지 확인 시작
var messageListBody = $("#messageListBody");
messageHome(); //페이지 첫시작시 메세지홈
function messageHome(){
	

	$.ajax({
		url : "${pageContext.request.contextPath}/messageList",
		dataType : "json",
		success : function(messageList) {
			messageListBody.empty();
			
			let trTags = [];
			
			messageListBody.append($("<h4>").html("메시지함"));
			
			
			
			if(messageList && messageList.length > 0){
			$.each(messageList, function(idx, data){
// 				<div class="card border-info text-dark" style="margin-top: 10px;">
				let trTag = $("<div>").addClass("card border-info text-dark").css("margin-top","10px").append(
// 				  <div class="card-header bg-info">
							$("<div>").addClass("card-header bg-info").html(data.USER_NAME)
							,$("<div>").addClass("card-body").append($("<p>").addClass("card-text").html(data.MEMO_CONTENT))
				)
				trTags.push(trTag);	
			});
			}else{
				let trTag = $("<tr>").html(
								$("<td>").attr("colspan", "10")
										 .html("조건에 맞는 데이터가 없음.")
							);
				trTags.push(trTag);
			} // if end		
			messageListBody.append(trTags);
			
		},
		error : function(jqXHR, textStatus, errorThrown) {
			console.log(jqXHR);
			console.log(textStatus);
			console.log(errorThrown);
		},
	});
}
//받은메세지 확인 끝

//sidebar 메세지홈버튼
$('#messageHome').on('click',function(){
	messageHome();
});


$('#friendsHome').on('click',function(){
	
	     $.ajax({  
		      type : "GET", 
		       url : "${pageContext.request.contextPath}/messageUserList2", 
		       dataType : "html", 
		       error : function() {    
			      alert('통신실패!!');    
			    },       
			 success : function(data) {
				          messageListBody.html(data);
				        }		       
			});   
	
});



		</script>




    <script src="${pageContext.request.contextPath }/resources/js/bootstrap-5.1.3-dist/js/bootstrap.bundle.min.js"></script>
