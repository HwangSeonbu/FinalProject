package kr.or.ddit.board.service;

import java.io.File;
import java.io.IOException;
import java.util.List;

import javax.inject.Inject;

import org.apache.xmlbeans.impl.xb.xsdschema.Public;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.ModelAttribute;

import kr.or.ddit.board.dao.NBoardAttchDAO;
import kr.or.ddit.board.dao.NoticeBoardDAO;
import kr.or.ddit.exception.PKNotFoundException;
import kr.or.ddit.vo.AttchVO;
import kr.or.ddit.vo.NoticeBoardVO;
import kr.or.ddit.vo.PagingVO;

@Service
public class NoticeBoardServiceImpl implements NoticeBoardService {
	
	@Inject
	private NoticeBoardDAO nBoardDAO;
	@Inject
	private NBoardAttchDAO nBoardAttchDAO;
	@Value("#{appInfo.attatchPath}")
	private File saveFolder;

	@Override
	public void retrieveNBoardList(PagingVO<NoticeBoardVO> paging) {
		
		int totalRecord = nBoardDAO.selectTotalNRecord(paging);
		paging.setTotalRecord(totalRecord);
		List<NoticeBoardVO> dataList = nBoardDAO.selectNBoardList(paging);
		paging.setDataList(dataList);	
	}

	@Override
	public NoticeBoardVO retrieveBoard(Integer noticeNo) {
		NoticeBoardVO nBoard = nBoardDAO.selectNBoard(noticeNo);			
		if(nBoard==null)
			throw new PKNotFoundException(String.format("%d번 글이 없음", noticeNo));		
		nBoardDAO.incrementHit(noticeNo);		
		return nBoard;
	}


	@Override
	public void removeNBoard(Integer noticeNo) {
		nBoardDAO.deleteNBoard(noticeNo);		
	}

	@Override
	public void modifyNBoard(NoticeBoardVO nBoardVO) {
		nBoardDAO.updateNBoard(nBoardVO);
		
	}

	@Override
	public void createNBoard(NoticeBoardVO nBoardVO) {
		int rowcnt = nBoardDAO.insertNBoard(nBoardVO);
		if(rowcnt > 0) {
			uploadAttch(nBoardVO);
		}	
	}


	@Override
	public void uploadAttch(NoticeBoardVO nBoardVO) {
		List<AttchVO> attchList = nBoardVO.getAttchList();
				if(attchList==null || attchList.isEmpty()) return;
//				업로드 : 2진 데이터(saveFolder) + 메타데이터(attchList)				
				nBoardAttchDAO.insertAttches(nBoardVO);
				attchList.forEach((attch)->{
					try {
						attch.saveTo(saveFolder);
					} catch (IOException e) {
						throw new RuntimeException(e);
					}
				});
			}

	@Override
	public AttchVO downloadAttch(Integer attchNo) {
		AttchVO attch = nBoardAttchDAO.selectAttch(attchNo);
		if(attch==null)
			throw new PKNotFoundException(String.format("%d번 파일이 없음.", attchNo));
			nBoardAttchDAO.incrementDowncount(attchNo);
			return attch;
		
	}
		
}
		

