<?xml version="1.0" encoding="UTF-8"?>
<!--  [[개정이력(Modification Information)]]       -->
<!--  수정일        수정자     수정내용               -->
<!--  ==========   ======    ==============        -->
<!--  2022. 5. 10.}     주창규     최초작성               -->
<!--  Copyright (c) 2022 by DDIT All right reserved -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.grade.dao.GradeDAO">
	
<!-- 	학생 점수 조회 -->
	<select id="selectStudentGrade" parameterType="map" resultType="map">
		WITH BASE AS (
			   SELECT  ROWNUM RNUM
					       , C.LEC_SEMS 
					       , C.USER_NO 
					       , STU_YEAR
					       , USER_NAME 
					       , SJT_NAME 
					       , CLS_MEXAM
					       , CLS_FEXAM 
					       , CLS_HWK
					       , CLS_ATTABS
					       , CLS_PCT
					       , CLS_RCT
					       , G.SJT_ID
					       , C.LEC_ID               
					       , RANK() OVER (ORDER BY CLS_RCT DESC ) AS RANK
					FROM STU A INNER JOIN USERS B ON(A.USER_NO = B.USER_NO)
					     INNER JOIN CLS C ON(B.USER_NO = C.USER_NO)
					     INNER JOIN LEC D ON(C.LEC_ID = D.LEC_ID)
					     INNER JOIN PLANOK E ON(D.LEC_ID = E.LEC_ID)
					     INNER JOIN PLAN F ON(E.PLAN_NO = F.PLAN_NO)
					     INNER JOIN SJT G ON(F.SJT_ID = G.SJT_ID)
					WHERE C.LEC_SEMS = #{lecSems}
					      AND C.LEC_ID = #{lecId}
					ORDER BY RNUM ASC)
			SELECT 
			    A.*, 
			    NVL((SELECT 
			     <![CDATA[ 
			        CASE WHEN (A.CLS_RCT < 30) AND (A.RANK/ COUNT(*)) > 0.9 THEN 'F'
			             WHEN (A.RANK / COUNT(*)) > 0.9 THEN 'D'
			             WHEN (A.RANK / COUNT(*)) > 0.8 THEN 'D+'
			             WHEN (A.RANK / COUNT(*)) > 0.7 THEN 'C'
			             WHEN (A.RANK / COUNT(*)) > 0.6 THEN 'C+'
			             WHEN (A.RANK / COUNT(*)) > 0.5 THEN 'B'
			             WHEN (A.RANK / COUNT(*)) > 0.3 THEN 'B+'
			             WHEN (A.CLS_RCT >= 95) AND (A.RANK/ COUNT(*)) > 0 THEN 'A+'
			             WHEN (A.RANK / COUNT(*)) > 0 THEN 'A'
			       ]]>
			       END
			    FROM BASE B), '-') CLS_CRDT
			FROM BASE A
	</select>
	
<!-- 	학기를 조회 -->
	<select id="selectSemsdata" resultType="String">
		SELECT * 
		FROM SEMSDATA 
		 <![CDATA[ 
		WHERE ADD_MONTHS(SYSDATE,48) >= SEMS_SDATE 
		      AND ADD_MONTHS(SYSDATE,-24) <= SEMS_EDATE
		 ]]>
	</select>
	
<!-- 	해당년도와 학기에 해당하는 한 명의 교수가 강의하는 강의목록 조회 -->
	<select id="selectProfessorLecture" parameterType="map" resultType="map" >
		SELECT  A.PLAN_SEMS 
		        , B.LEC_ID 
		        , B.LEC_NAME 
		FROM PLAN A INNER JOIN PLANOK B ON (A.PLAN_NO = B.PLAN_NO)
		WHERE USER_NO = #{userNo}
		      AND A.PLAN_SEMS = #{planSems}
	</select>
	
<!-- 	과목에 대한 비중 조회 -->
	<select id="selectLectureRate" parameterType="String" resultType="map" >
		SELECT  NVL(MAX((MRATE)),0) as MRATE
			    ,NVL(MAX((FRATE)),0) as FRATE
			    ,NVL(MAX((HWRATE)),0) as HWRATE
			    ,NVL(MAX((ATTRATE)),0) as ATTRATE
		FROM LEC
		WHERE LEC_ID = #{lecId}
						
	</select>
	
<!-- 	중간고사/ 기말고사/ 과제 /출석을 합한 최종 원점수 -->
	<update id="updateClspct" parameterType="map">
		UPDATE CLS 
	    SET CLS_PCT = (SELECT (CLS_MEXAM+CLS_FEXAM+CLS_HWK+CLS_ATTABS)
	                    FROM CLS 
	                    WHERE USER_NO = #{USER_NO}
	                    AND LEC_ID = #{LEC_ID})
		WHERE USER_NO = #{USER_NO}
		AND LEC_ID = #{LEC_ID}
	</update>
	
	<!-- 	중간고사/ 기말고사/ 과제 /출석을 합한 최종 비중 점수 -->
	<update id="updateClsrct" parameterType="map">
		UPDATE CLS
		SET CLS_RCT = (SELECT  (CLS_MEXAM / 100 *MRATE) 
		                       +(CLS_FEXAM / 100 * FRATE)
		                       +(CLS_HWK / 100 * HWRATE)
		                       +(CLS_ATTABS / 100 *ATTRATE)
		                 FROM CLS A INNER JOIN LEC B ON (A.LEC_ID = B.LEC_ID)
		                WHERE A.USER_NO = #{USER_NO}
		                      AND B.LEC_ID = #{LEC_ID})
		WHERE USER_NO = #{USER_NO}
		      AND LEC_ID = (SELECT LEC_ID
		                     FROM LEC
		                    WHERE LEC_ID = #{LEC_ID})
	</update>
	
	
	
<!-- 	중간고사점수 수정 -->
	<update id="updateClsMexam" parameterType="map">
		UPDATE CLS 
		SET CLS_MEXAM = #{clsMexam}
		WHERE LEC_ID = #{lecId}
		      AND LEC_SEMS = #{lecSems}
		      AND USER_NO = #{userNo}
	</update>
	
	
<!-- 	기말고사점수 수정 -->
<update id="updateClsFexam" parameterType="map">
	UPDATE CLS 
	SET CLS_FEXAM = #{clsFexam}
	WHERE LEC_ID = #{lecId}
	      AND LEC_SEMS = #{lecSems}
	      AND USER_NO = #{userNo}
</update>

<!-- 	과제점수 수정 -->
<update id="updateClsHwk" parameterType="map">
	UPDATE CLS 
	SET CLS_HWK = #{clsHwk}
	WHERE LEC_ID = #{lecId}
	      AND LEC_SEMS = #{lecSems}
	      AND USER_NO = #{userNo}
</update>

<!-- 출석 점수 수정 -->
<update id="updateclsAttabs" parameterType="map">
	UPDATE CLS
	SET CLS_ATTABS =
	                (SELECT NVL(MAX(TRUNC((attendanceCount/totalCount)*100)),0) AS tatalAttendanceGrade
		                FROM (
		                    WITH SAMPLE AS (
		                        SELECT ATTABS_CODE
		                        FROM ATTABS A INNER JOIN STU B ON(A.USER_NO = B.USER_NO)
		                             INNER JOIN PLAN C ON(A.PLAN_NO = C.PLAN_NO)
		                             INNER JOIN SJT D ON (C.SJT_ID = D.SJT_ID)
                                     INNER JOIN PLANOK E ON (C.PLAN_NO=E.PLAN_NO)
	                        WHERE A.USER_NO = #{USER_NO}
	                              AND E.LEC_ID = #{LEC_ID}
	                    )
	                    SELECT DISTINCT
	                        (SELECT COUNT(*) FROM SAMPLE ) AS totalCount
	                        ,(SELECT COUNT(*) FROM SAMPLE WHERE ATTABS_CODE = 'D101') AS attendanceCount
	                        , (SELECT COUNT(*) FROM SAMPLE WHERE ATTABS_CODE = 'D102') AS absentCount
	                        , (SELECT COUNT(*) FROM SAMPLE WHERE ATTABS_CODE = 'D103') AS earlyLeaveCount
	                        , (SELECT COUNT(*) FROM SAMPLE WHERE ATTABS_CODE = 'D104') AS tardinessCount
	                    FROM SAMPLE))
	WHERE USER_NO = #{USER_NO}
	     AND LEC_ID = (SELECT LEC_ID
	                    FROM PLANOK
	                    WHERE LEC_ID = #{LEC_ID})
</update>

<!-- 강의 상태를  개강 > 종강 으로 수정 -->
<update id="updatelecSts" parameterType="map">
	UPDATE  LEC
		SET  LEC_STS = (SELECT STS_CODE1
		                 FROM CODE
		                WHERE STS_ID = 'S102')
		WHERE LEC_ID = #{lecId}
		    AND LEC_SEMS = #{lecSems}
</update>


<update id="updateclsCrdt" parameterType="map">
	UPDATE CLS
	SET CLS_CRDT= #{CLS_CRDT}
	WHERE LEC_ID = #{LEC_ID}
		    AND LEC_SEMS = #{LEC_SEMS}
		    AND USER_NO = #{USER_NO}
</update>
</mapper>