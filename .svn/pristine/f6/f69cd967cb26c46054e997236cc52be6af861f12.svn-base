package kr.or.ddit.scholarship.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;

import org.apache.ibatis.annotations.Param;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.enumpkg.ServiceResult;
import kr.or.ddit.scholarship.service.StudentScholarshipService;
import kr.or.ddit.vo.MemberVO;
import kr.or.ddit.vo.ScholarshipVO;
import kr.or.ddit.vo.security.MemberVOWrapper;
/**
 * 
 * @author 민진홍
 * @since 2022. 5. 16.
 * @version 1.0
 * @see javax.servlet.http.HttpServlet
 * <pre>
 * [[개정이력(Modification Information)]]
 * 수정일                          수정자               수정내용
 * --------     --------    ----------------------
 * 2022. 5. 16.      민진홍	장학금신청
 * Copyright (c) 2022 by DDIT All right reserved
 * </pre>
 */
@Controller
@RequestMapping("/applyScholar")
public class StudentScholarshipApplyContoller {

	@Inject
	private StudentScholarshipService service;
	
	/**
	 * 장학금 신청페이지 조회
	 * @return
	 */
	@RequestMapping("scholarApplyForm.do")
	public String scholarApplyForm(Model model,Authentication authentication) {
			MemberVO authMember
			 = ((MemberVOWrapper)authentication.getPrincipal()).getRealUser();
			int userNo = authMember.getUserNo();
			List<ScholarshipVO> schList = service.studentScholarshipApplyList();
			List<String> aleardList = service.studentScholarshipAleardyApply(userNo);
			model.addAttribute("schList", schList);
			model.addAttribute("aleardList",aleardList);
		return "scholarship/studentScholarRequestForm";
	}
	
	/**
	 * 장학금 신청버튼
	 * @param schNo
	 * @param session
	 * @param authentication
	 * @return
	 */
	@PostMapping("studentScholarApply")
	@ResponseBody
	public int studentScholarApply(@RequestParam("schNo") String schNo, HttpSession session, Authentication authentication) {
		MemberVO authMember
		 = ((MemberVOWrapper)authentication.getPrincipal()).getRealUser();
		int userNo = authMember.getUserNo();
		Map<String,Object> info = new HashMap<>();
		info.put("schNo", schNo);
		info.put("userNo", userNo);
		info.put("thisSemester", session.getAttribute("thisSemester"));
		return service.studentScholarshipApply(info);
		
	}
}
