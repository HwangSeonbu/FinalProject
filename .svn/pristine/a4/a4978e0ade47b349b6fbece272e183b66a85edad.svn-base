package kr.or.ddit.student.controller;

import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FileUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import lombok.extern.slf4j.Slf4j;

/**
 * 학생등록에 필요한 EXCEL양식 다운로드 컨트롤러
 * @author 작성자명
 * @since 2022. 5. 3.
 * @version 1.0
 * @see javax.servlet.http.HttpServlet
 * <pre>
 * [[개정이력(Modification Information)]]
 * 수정일                          수정자               수정내용
 * --------     --------    ----------------------
 * 2022. 5. 3.    고성식      		 최초작성 
 * Copyright (c) 2022 by DDIT All right reserved
 * </pre>
 */
@Controller
@Slf4j
public class StudentInsertFileDownloadController {
	private String saveFolderPath = "D:\\exampleExcelFolder";
	
//	@RequestMapping(value="fileUpload.do", method=RequestMethod.POST)
//	public String fileUpload(
//		@RequestParam("uploader") String uploader
//		,@RequestPart MultipartFile uploadFile
//		, RedirectAttributes redirectAttributes
//		, HttpSession session	
//	) throws IOException{
//		redirectAttributes.addFlashAttribute("uploader", uploader);
//		Map<String, Object> fileMetaData = fileUpload(uploadFile);
//		log.info("file meta data : {}", fileMetaData);
//		session.setAttribute("uploadFile", fileMetaData);
//		return "redirect:/studentForm.jsp";
//	}
	
	@RequestMapping("/fileDownload.do")
	public String fileDownload(
		@RequestParam("file") String file
		, HttpServletResponse resp
		, HttpSession session
	)throws IOException {
		Map<String, Object> fileMetaData = 
				(Map) session.getAttribute("uploadFile");
		File saveFolder = new File(saveFolderPath);
		File saveFile = new File(saveFolder, file);
		if(!saveFile.exists()) {
			resp.sendError(404, file+"에 해당하는 파일이 없음.");
			return null;
		}
		String fileName = (String) fileMetaData.get("originalFilename");
		fileName = URLEncoder.encode(fileName, "UTF-8");
		fileName = fileName.replace("+", " ");
		resp.setHeader("Content-Disposition", "attatchment;filename=\""+fileName+"\"");
		resp.setHeader("Content-Length", saveFile.length()+"");
		try(
			OutputStream os = resp.getOutputStream();	
		){
			FileUtils.copyFile(saveFile, os);
			return null;
		}
	}
	
	
//	private Map<String, Object> fileUpload(MultipartFile uploadFilePart) throws IOException {
//		Map<String, Object> metaData = new HashMap<>();
//		String originalFilename = uploadFilePart.getOriginalFilename();
//		File saveFolder = new File(saveFolderPath);
//		String saveName = UUID.randomUUID().toString();
//		File saveFile = new File(saveFolder, saveName);
//		long fileSize = uploadFilePart.getSize();
//		String fileMime = uploadFilePart.getContentType();
//		metaData.put("originalFilename", originalFilename);
//		metaData.put("saveName", saveName);
//		metaData.put("fileSize", fileSize);
//		metaData.put("fileMime", fileMime);
//		
//		uploadFilePart.transferTo(saveFile);
//		
//		return metaData;
//	}
}
