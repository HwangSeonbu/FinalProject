package kr.or.ddit.attendance.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.stereotype.Service;
import org.springframework.web.context.request.RequestAttributes;
import org.springframework.web.context.request.RequestContextHolder;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

import kr.or.ddit.attendance.dao.ProfessorAttendanceDAO;
import kr.or.ddit.vo.AttabsEnrollVO;
import kr.or.ddit.vo.LectureVO;
import kr.or.ddit.vo.SemsVO;

@Service
public class ProfessorAttendanceServiceImpl implements ProfessorAttendanceService {

	@Inject
	ProfessorAttendanceDAO dao;
	
	@Override
	public List<LectureVO> retrieveProLectureList(Map<String, Integer> paramMap) {
		// TODO Auto-generated method stub
		return dao.selectProLectureList(paramMap);
	}

	@Override
	public List<String> retrieveLecDateList(String lecId) {
		
		return dao.selectLecDateList(lecId);
	}

	@Override
	public List<AttabsEnrollVO> retrieveAttabsStudentList(Map<String, Object> paramMap) {
		
		AttabsEnrollVO vo = new AttabsEnrollVO();
		vo.setLecId(String.valueOf(paramMap.get("lecId")));
		vo.setLecSems(Integer.parseInt(String.valueOf(paramMap.get("lecSems"))));
		vo.setPlanNo(Integer.parseInt(String.valueOf(paramMap.get("planNo"))));
		vo.setAttabsDate(String.valueOf(paramMap.get("attabsDate")));
		
		List<AttabsEnrollVO> studentList = dao.selectAttabsStudentList(vo);
		
		return studentList;
	}

	@Override
	public int modifyOrCreateAttabs(Map<String, Object> paramMap) {
		SemsVO semsVo = (SemsVO) RequestContextHolder.getRequestAttributes()
                .getAttribute("semsVo", RequestAttributes.SCOPE_SESSION);
		
		int resCnt = 0;
		String targetList = paramMap.get("targetList").toString();
		String targetListReplace = targetList.replaceAll("&quot;", "\"");
		
		ObjectMapper mapper = new ObjectMapper();
		
		List<AttabsEnrollVO> dataList = new ArrayList<>();
		
		try {
			dataList =
					mapper.readValue(targetListReplace, new TypeReference<ArrayList<AttabsEnrollVO>>() {});
		} catch (JsonProcessingException e) {
			e.printStackTrace();
		}
		
		for(AttabsEnrollVO eachVo : dataList) {
			eachVo.setLecSems(semsVo.getThisSems());
			resCnt += dao.updateOrInsertAttabs(eachVo);
		}
		
		return resCnt;
	}

	@Override
	public int modifyOrCreateAttabsOne(AttabsEnrollVO paramVo) {
		SemsVO semsVo = (SemsVO) RequestContextHolder.getRequestAttributes()
                .getAttribute("semsVo", RequestAttributes.SCOPE_SESSION);
		
		int resCnt = 0;
		paramVo.setLecSems(semsVo.getThisSems());
		
		resCnt = dao.updateOrInsertAttabs(paramVo);
		
		return resCnt;
	}

}
