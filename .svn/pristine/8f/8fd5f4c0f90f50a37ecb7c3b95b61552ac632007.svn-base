<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.homework.dao.HomeworkDAO">
		<sql id="searchFrag">

			<if test="simpleCondition neq null and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
						and lechwk_name LIKE '%'||#{simpleCondition.searchWord}||'%'
			</if>

		</sql>
	
	<select id="homeworkList" parameterType="PagingVO" resultType="LecHomeworkVO">
SELECT B.*	
    FROM( SELECT ROWNUM RNUM, A.*
        FROM(
		SELECT  lechwk_no
		   ,lec_sems
		   ,lec_id
		   ,user_no
		   ,lechwk_name
		   ,lechwk_cont
		   ,TO_CHAR(lechwk_date,'YY/MM/DD HH24:MI:SS') AS LECHWK_DATE
		  <![CDATA[
		   ,(CASE WHEN SYSDATE<lechwk_date THEN 'OPENED'
		        ELSE 'CLOSED' 
		    END)AS LECHWK_CODE]]>
		    ,TO_CHAR(REGIST_DATE,'YY/MM/DD HH24:MI:SS') AS REGIST_DATE
		    ,hit
		FROM
		    lechwk
	
		WHERE LEC_ID = #{detailCondition.lecId} and LEC_SEMS=(SELECT SEMS_NO
							        				FROM SEMSDATA
												       <![CDATA[
								 				        WHERE SYSDATE >= SEMS_SDATE 
								 				        AND SYSDATE <= SEMS_EDATE) ]]>
			<include refid="searchFrag"></include>
		order by lechwk_no desc
						)A
			)B
			<![CDATA[
		WHERE RNUM >=#{startRow} AND RNUM <=#{endRow}
		]]>
	</select>
	
	<select id="totalHomeworkList" parameterType="PagingVO" resultType="int">
		select count(*)
		from lechwk
		where lec_id = #{detailCondition.lecId} and LEC_SEMS=(SELECT SEMS_NO
									        				FROM SEMSDATA
														       <![CDATA[
										 				        WHERE SYSDATE >= SEMS_SDATE 
										 				        AND SYSDATE <= SEMS_EDATE) ]]>
	</select>
	
	<resultMap type="LecHomeworkVO" id="hwMap" autoMapping="true">
		<id property="lechwkNo" column="lechwk_no"/>
		<collection property="hwkList" ofType="HwkVO" autoMapping="true">
		<id property="hwkNo" column="hwk_no"/>
		</collection>
		<collection property="evaList" ofType="EvaStandardVO" autoMapping="true">
		<id property="evaId" column="eva_id"/>
		</collection>
	</resultMap>
	
	
	<select id="homework" parameterType="int" resultMap="hwMap">
	SELECT
	    A.lechwk_no
	   ,A.lec_sems
	   ,A.lec_id
	   ,A.user_no
	   ,A.lechwk_name
	   ,TO_CHAR(A.lechwk_date,'YY/MM/DD HH24:MI:SS') AS LECHWK_DATE
	   ,TO_CHAR(A.regist_date,'YY/MM/DD HH24:MI:SS') AS regist_date
	   ,A.hit
	   ,A.lechwk_cont
   	   ,A.ATTCH_NO
	   ,B.hwk_no
	   ,B.STU_NO
	   ,B.board_attch
	   ,TO_CHAR(B.hwk_date,'YY/MM/DD HH24:MI:SS') AS hwk_date
	   ,B.hwk_score
	   ,B.PRO_NO
	   ,B.hwk_opinion
	   ,(SELECT USER_NAME FROM USERS WHERE USER_NO=B.STU_NO) AS STU_NAME
	   ,C.eva_id
	   ,C.eva_std
	   ,C.eva_score
	   ,C.lechwk_no
    ,(SELECT ROUND(COUNT(STU_NO)*100,1)
    FROM HWK
    WHERE LECHWK_NO=#{lechwkNo})/(SELECT DISTINCT(COUNT(USER_NO))
                        FROM CLS 
                        WHERE LEC_ID = (SELECT LEC_ID
                                            FROM LECHWK
                                            WHERE LECHWK_NO=23)
                            AND LEC_SEMS =  ( SELECT SEMS_NO                                      
                                                FROM SEMSDATA
                                                			<![CDATA[
                                                WHERE SYSDATE >= SEMS_SDATE
                                                    AND SYSDATE <= SEMS_EDATE)) AS submitRate
                                                    		]]>
    FROM
	    lechwk A LEFT OUTER JOIN HWK B ON(A.LECHWK_NO = B.LECHWK_NO)
	            INNER JOIN EVA_STANDARD C ON(A.LECHWK_NO = C.LECHWK_NO)
                
    WHERE A.LECHWK_NO = #{lechhwkNo}
	</select>
	
	<update id="updateHit" parameterType="int">
	UPDATE lechwk
	SET HIT = HIT + 1
	WHERE lechwk_no = #{lechwkNo}
	</update>
	
	<insert id="insertHomework" parameterType="LecHomeworkVO" >
	<selectKey order="BEFORE" resultType="int" keyProperty="lechwkNo">
	SELECT  NVL(MAX(LECHWK_NO),0)+1 FROM LECHWK
	</selectKey>
	INSERT INTO lechwk (
	    lechwk_no
	   ,lec_sems
	   ,lec_id
	   ,user_no
	   ,lechwk_name
	   ,lechwk_date
	   ,regist_date
	   ,lechwk_cont
	   <if test="attchNo != null">
	   ,attch_no	   
	   </if>
) VALUES (
	 #{lechwkNo}
	,( SELECT SEMS_NO                                      
       FROM SEMSDATA
      <![CDATA[
      WHERE SYSDATE >= SEMS_SDATE
      AND SYSDATE <= SEMS_EDATE)
  		]]>    
	,#{lecId,jdbcType=VARCHAR}
	,(SELECT USER_NO
		FROM LEC
		WHERE LEC_ID=#{lecId} AND LEC_SEMS =  ( SELECT SEMS_NO                                      
		                                                FROM SEMSDATA
		                                                <![CDATA[
		                                                WHERE SYSDATE >= SEMS_SDATE
		                                                    AND SYSDATE <= SEMS_EDATE))]]>

	,#{lechwkName,jdbcType=VARCHAR}
	,#{lechwkDate,jdbcType=DATE}
	,#{registDate,jdbcType=DATE}
	,#{lechwkCont,jdbcType=CLOB}
	<if test="attchNo != null">
	,#{attchNo,jdbcType=NUMERIC}
	</if>
)
	</insert>
	
	<insert id="insertEva" parameterType="LecHomeworkVO">
	INSERT ALL
		<foreach collection="evaList" item="eva" index="idx">
		INTO EVA_STANDARD (
							eva_id
						   ,eva_std
						   ,eva_score
						   ,lechwk_no)
		VALUES (
				(SELECT TO_CHAR(NVL(MAX(TO_NUMBER(EVA_ID)),0)+1) FROM EVA_STANDARD)
				,#{eva.evaStd}
				,#{eva.evaScore}
				,#{lechwkNo}
		)
		
		</foreach>
	select * from dual
	</insert>
<!-- 	<insert id=""> -->
<!-- 	INSERT INTO eva_standard ( -->
<!--     eva_id -->
<!--    ,eva_std -->
<!--    ,eva_score -->
<!--    ,lechwk_no -->
<!-- ) VALUES ( -->
<!-- 	#{evaId,jdbcType=VARCHAR} -->
<!-- 	,#{evaStd,jdbcType=VARCHAR} -->
<!-- 	,#{evaScore,jdbcType=NUMERIC} -->
<!-- 	,#{lechwkNo,jdbcType=NUMERIC} -->
<!-- ) -->
<!-- 	</insert> -->
	
	
</mapper>