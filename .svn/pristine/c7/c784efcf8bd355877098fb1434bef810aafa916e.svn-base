package kr.or.ddit.board.controller;

import javax.inject.Inject;

import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.board.service.FreeBoardService;
import kr.or.ddit.vo.FreeBoardVO;
import kr.or.ddit.vo.MemberVO;
import kr.or.ddit.vo.PagingVO;
import kr.or.ddit.vo.SimpleSearchVO;
import kr.or.ddit.vo.security.MemberVOWrapper;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/board")
public class FreeBoardController {
	
	@Inject
	private FreeBoardService service;
		
	//게시판 목록 출력
		@RequestMapping("/freeBoardList.do")
		public String listHandler(
			@RequestParam(value="page", required=false, defaultValue="1") int currentPage
			, @ModelAttribute("simpleCondition") SimpleSearchVO simpleCondition
			, Model model
		){
			PagingVO<FreeBoardVO> paging = new PagingVO<>(10,5);
			paging.setCurrentPage(currentPage);
			paging.setSimpleCondition(simpleCondition);
			
			service.retrieveBoardList(paging);
			
			model.addAttribute("paging", paging);
			
			return "board/freeBoardList";
		}
		
	//상세화면 뷰 
	@RequestMapping("freeBoardView.do")
	public String detailViewHandler(
		@RequestParam(value="who", required=false, defaultValue="") String boardNo
			, Model model
	) {
		FreeBoardVO fBoard = service.retrieveBoard(boardNo);
		model.addAttribute("fBoard", fBoard);
		log.info("여기까지??=================================="+fBoard);
		
		return "board/freeBoardView";
	}	
	
	//글 작성 폼
	@RequestMapping("/freeBoardWriteForm")
	public String insertForm(
			@ModelAttribute("fBoard") FreeBoardVO fBoard,
			Authentication authentication,
			Model model
	) {
		MemberVO authMember = ((MemberVOWrapper)authentication.getPrincipal()).getRealUser();
		int userNo = authMember.getUserNo();
		model.addAttribute("userNo", userNo);
		return "board/freeBoardForm";
	}
	
	// 글 저장
	@RequestMapping(value="/freeSave", method = RequestMethod.POST)
	public String saveForm(
			@ModelAttribute("fBoard") FreeBoardVO fBoard
			,Model model) {
		service.createFBoard(fBoard);
		return "redirect:/board/freeBoardList.do";
	}
	
	//글 삭제
	@RequestMapping(value="/freeBoardListView", method=RequestMethod.POST)
	public String fBoardDelete(FreeBoardVO fBoardVO) {
		service.removeFBoard(fBoardVO.getBoardNo());
		
		return "redirect:/board/freeBoardList.do";
	}
		
	//글 수정 뷰
	@RequestMapping(value="/freeBoardEditView", method = RequestMethod.POST)
	public String updateView(FreeBoardVO fBoardVO, Model model) {
		model.addAttribute("fBoardVO", service.retrieveBoard(fBoardVO.getBoardNo()));
		return "board/freeBoardEdit";
	}
		
		//글 수정하고 리스트로 고~
		@RequestMapping(value="/freeBoardView", method = RequestMethod.POST)
		public String update(FreeBoardVO fBoardVO, Model model) {
			service.modifyFBoard(fBoardVO);
			model.addAttribute("who", fBoardVO.getBoardNo());
			
			return "redirect:/board/freeBoardView.do";
		}
		
		
}
