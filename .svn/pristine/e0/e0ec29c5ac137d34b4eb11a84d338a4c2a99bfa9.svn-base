package kr.or.ddit.student.controller;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.io.FilenameUtils;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.student.service.StudentService;
import kr.or.ddit.vo.PagingVO;
import kr.or.ddit.vo.SimpleSearchVO;
import kr.or.ddit.vo.StudentInsertVO;
import kr.or.ddit.vo.StudentVO;
import lombok.extern.slf4j.Slf4j;

/**
 * 학생 리스트를 불러오는 controller
 * @author 작성자명
 * @since 2022. 4. 26.
 * @version 1.0
 * @see javax.servlet.http.HttpServlet
 * <pre>
 * [[개정이력(Modification Information)]]
 * 수정일                          수정자               수정내용
 * --------     --------    ----------------------
 * 2022. 4. 26.   고성식      		 최초작성  
 * 
 * Copyright (c) 2022 by DDIT All right reserved
 * </pre>
 */
@Controller
@RequestMapping("/student")
@Slf4j
public class StudentRetrieveController {
	private final StudentService service;
	public StudentRetrieveController(StudentService service) {
		super();
		this.service = service;
	}
	
	@RequestMapping("studentList.do")
	public String studentListView() {
		return "student/studentList";
	}
	
	@RequestMapping(value="studentList.do", produces=MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public PagingVO<StudentVO> listHandler(
			@RequestParam(value="page", required=false, defaultValue="1") int[] currentPage 
			, @ModelAttribute("simpleCondition") SimpleSearchVO simpleCondition
			, Model model	
	) {
		log.info("listHandler 도착*/*************************************");
		PagingVO<StudentVO> paging = new PagingVO<>(10, 10);
		paging.setCurrentPage(currentPage[0]);
		paging.setSimpleCondition(simpleCondition);
		
		service.retrieveStudentList(paging);
//		log.info(paging.getPagingHTMLBS());
		
		model.addAttribute("paging", paging);
		
		return paging;
	}
	
	@RequestMapping("studentView.do")
	public String view(@RequestParam("what") Integer userNo, Model model) {
		StudentVO student = service.retriveStudent(userNo);
		model.addAttribute("student", student);
		return "student/studentView";
	}
	
	@RequestMapping("studentForm.do")
	public String stuInsert() {
		return "student/studentForm";
	}
	
	@RequestMapping(value="studentForm.do", method=RequestMethod.POST)
	public String readExcel(@RequestParam("file") MultipartFile file, Model model)
            throws IOException {
		
		System.out.println("########################엑셀도착#############################");
		
		List<StudentInsertVO> dataList = new ArrayList<>();
		
		String extension = FilenameUtils.getExtension(file.getOriginalFilename());
		
		if (!extension.equals("xlsx") && !extension.equals("xls")) {
            throw new IOException("엑셀파일만 업로드 해주세요.");
        }
		
		System.out.println("########################1차진행#############################");
		Workbook workbook = null;

        if (extension.equals("xlsx")) {
            workbook = new XSSFWorkbook(file.getInputStream());
        } else if (extension.equals("xls")) {
            workbook = new HSSFWorkbook(file.getInputStream());
        }

        
        System.out.println("########################2차진행#############################");
        Sheet worksheet = workbook.getSheetAt(0);
        System.out.println("----------------------------------------------------------");
        for (int i = 1; i < worksheet.getPhysicalNumberOfRows(); i++) {
            Row row = worksheet.getRow(i);

            StudentInsertVO data = new StudentInsertVO();

            Double userNoInt = (Double) row.getCell(0).getNumericCellValue();
            String deptIdStr = row.getCell(1).getStringCellValue();
            Integer stuYearInt = (int)row.getCell(2).getNumericCellValue();
            String stuClassStr = row.getCell(3).getStringCellValue();
            String userPassStr = row.getCell(4).getStringCellValue();
            String userNameStr = row.getCell(5).getStringCellValue();
            String userGenderStr = row.getCell(6).getStringCellValue();
            String userPhoneStr = row.getCell(7).getStringCellValue();
            String userAddrStr = row.getCell(8).getStringCellValue();
            String userReg1Str = row.getCell(9).getStringCellValue();
            Integer userReg2Int = (int)row.getCell(10).getNumericCellValue();
            String userMailStr = row.getCell(11).getStringCellValue();
            String deptNameStr = row.getCell(12).getStringCellValue();
            String colNameStr = row.getCell(13).getStringCellValue();
            System.out.println(userNoInt + "\t" + deptIdStr + "\t" + stuYearInt + "\t" + stuClassStr + "\t" +userPassStr
            		+ "\t" +userNameStr+ "\t" +userGenderStr+ "\t" +userPhoneStr+ "\t" +userAddrStr + "\t" +userReg1Str
            		+ "\t" +userReg2Int+ "\t" +userMailStr + "\t"+ deptNameStr + "\t"+ colNameStr );
            
//            data.setUserNo(userNoStr);    // 실수
//            data.setName(row.getCell(1).getStringCellValue());          // 문자열
//            data.setEmail(row.getCell(2).getStringCellValue());         // 논리

            dataList.add(data);
            
        }

        model.addAttribute("dataList", dataList);
        System.out.println(dataList);

        return "excelList";
    }
	
}
